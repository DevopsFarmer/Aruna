/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    accounts: Account;
    Block: Block;
    vendor: Vendor;
    stone: Stone;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    accounts: AccountsSelect<false> | AccountsSelect<true>;
    Block: BlockSelect<false> | BlockSelect<true>;
    vendor: VendorSelect<false> | VendorSelect<true>;
    stone: StoneSelect<false> | StoneSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  phone?: string | null;
  role: 'owner' | 'client' | 'sites-visitor';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accounts".
 */
export interface Account {
  id: number;
  name: string;
  type?: ('clinet' | 'vendor') | null;
  opening_balance?: number | null;
  current_balance?: number | null;
  is_locked?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Block".
 */
export interface Block {
  id: number;
  BlockType: 'Brown' | 'White';
  date?: string | null;
  vender_id?: (number | null) | Vendor;
  munim?: string | null;
  total_cost?: number | null;
  hydra_cost?: number | null;
  truck_cost?: number | null;
  todirate?: number | null;
  total_quantity?: number | null;
  issued_quantity?: number | null;
  left_quantity?: number | null;
  final_total?: number | null;
  front_l: number;
  front_b?: number | null;
  front_h?: number | null;
  back_l?: number | null;
  back_b?: number | null;
  back_h?: number | null;
  total_area?: number | null;
  total_todi_cost?: number | null;
  block?:
    | {
        addmeasures?:
          | {
              l?: number | null;
              b?: number | null;
              h?: number | null;
              black_area?: number | null;
              black_cost?: number | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  createdBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vendor".
 */
export interface Vendor {
  id: number;
  address?: string | null;
  vendor?: string | null;
  vendor_no?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stone".
 */
export interface Stone {
  id: number;
  stoneType: 'Khanda' | 'Raskat';
  date?: string | null;
  rate?: number | null;
  total_quantity?: number | null;
  issued_quantity?: number | null;
  left_quantity?: number | null;
  munim?: string | null;
  hydra_cost?: number | null;
  total_amount?: number | null;
  createdBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'accounts';
        value: number | Account;
      } | null)
    | ({
        relationTo: 'Block';
        value: number | Block;
      } | null)
    | ({
        relationTo: 'vendor';
        value: number | Vendor;
      } | null)
    | ({
        relationTo: 'stone';
        value: number | Stone;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  phone?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accounts_select".
 */
export interface AccountsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  opening_balance?: T;
  current_balance?: T;
  is_locked?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Block_select".
 */
export interface BlockSelect<T extends boolean = true> {
  BlockType?: T;
  date?: T;
  vender_id?: T;
  munim?: T;
  total_cost?: T;
  hydra_cost?: T;
  truck_cost?: T;
  todirate?: T;
  total_quantity?: T;
  issued_quantity?: T;
  left_quantity?: T;
  final_total?: T;
  front_l?: T;
  front_b?: T;
  front_h?: T;
  back_l?: T;
  back_b?: T;
  back_h?: T;
  total_area?: T;
  total_todi_cost?: T;
  block?:
    | T
    | {
        addmeasures?:
          | T
          | {
              l?: T;
              b?: T;
              h?: T;
              black_area?: T;
              black_cost?: T;
              id?: T;
            };
        id?: T;
      };
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vendor_select".
 */
export interface VendorSelect<T extends boolean = true> {
  address?: T;
  vendor?: T;
  vendor_no?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stone_select".
 */
export interface StoneSelect<T extends boolean = true> {
  stoneType?: T;
  date?: T;
  rate?: T;
  total_quantity?: T;
  issued_quantity?: T;
  left_quantity?: T;
  munim?: T;
  hydra_cost?: T;
  total_amount?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}